#include<iostream>
using namespace std;                 虚基类适用于多派生加多继承

class Base0
{
public:
      int var0;
      void fun0()
      {
            const<<"Member of Base0"<<endl;
      }
};
class Base1:virtual public Base0          //虚继承类
{
public:
      int varl;
};
class Base2:virtual public Base0
{
public:
      int var2;
};
class Derived:public Base1,public Base2        //实继承类
{
 public:
      int var;
      void fun()
      {
            cont<<"Member of Derived"<<endl;
      }
};
int main()
{
      Derived d;
      d.var0= 2;         //直接调用爷爷类的函数成员和数据成员
      d.fun0();
      return 0;
}


//不使用虚基类
/*
d.Base1::var0=2;
d.Base1::fun0();
d.Base2::var0=3;        使用直接父类调用爷爷类的成员，会创建多个相同的内存副本
d.Base2::fun0();